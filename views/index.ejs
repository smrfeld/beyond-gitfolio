<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Beyond-Gitfolio UI</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.min.css"
    />
    <link
      rel="stylesheet"
      href="https://use.fontawesome.com/releases/v5.7.1/css/all.css"
      integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" type="text/css" href="./css/index.css" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/gh/zeva-ui/zeva/dist/css/zeva.min.css"
    />
  </head>
  <body class="body-light" onload="loadConfig(); addPageWithName('Papers',true,false,false); addPageWithName('Code',false,true,false);">
    <header>
      <b>beyond-gitfolio</b>
      <a href="/blog" style="float: right">New Blog </a>
      <a href="/" style="float: right">Home</a>
    </header>

    <!-- Here it says action=build => /build will be called when submit button is pressed-->
    <form method="post" action="build" id="form">
      <h3>Build or Edit Portfolio</h3>
      <input
        type="text"
        class="input h-weight-bold"
        placeholder="username"
        id="username"
        name="username"
        required
      /><br />
      <input
        type="text"
        class="input h-weight-bold"
        placeholder="background image"
        name="background"
        id="background"
      />

      <br />
      <br />
      <h3 style="display: inline;">Pages :</h3> &nbsp;
      <!--New page button-->
      <button
        class="button h-weight-bold h-border-pill -size-small"
        type="button"
        onclick="newPage()"
      >
        <i class="fas fa-plus"></i>&nbsp; Page
      </button>

      <!--Input for new page-->
      <div style="display: none" id="input_for_page" class="indentPage">
        <input
          type="text"
          class="input h-weight-bold"
          placeholder="Page name"
          id="page-name"
        /><br />

        <label class="label"
          >External link
          <input type="checkbox" id="external-url-check" onclick="externalLink()"/>
          <span class="checkbox"></span>
        </label>

        <input
          type="text"
          class="input h-weight-bold"
          placeholder="External URL"
          id="external-url"
          style="display: none"
        /><br />

        <button
          class="button h-weight-bold h-border-pill -size-small"
          type="button"
          onclick="addPage()"
        >
          <i class="fas"></i>Add
        </button>
        <button
          class="button h-weight-bold h-border-pill -size-small"
          type="button"
          onclick="cancelAddPage()"
        >
        <i class="fas"></i>Cancel
      </button>
      </div>

      <!--Page list-->
      <div id="pageList" style="display: none"></div>

      <br /><br />
      <label class="label"
        >Use Dark Theme
        <input type="checkbox" id="theme" name="theme" checked />
        <span class="checkbox"></span>
      </label>
      <label class="label"
        >Include Forks
        <input type="checkbox" id="fork" name="fork" value="true" />
        <span class="checkbox"></span>
      </label>
      <label class="label"
        >Include Socials
        <input type="checkbox" id="socials" name="socials" />
        <span class="checkbox"></span>
      </label>
      <div style="display: none" id="input_for_socials">
        <input
          type="text"
          class="input h-weight-bold"
          placeholder="twitter username"
          id="twitter"
          name="twitter"
        /><br />
        <input
          type="text"
          class="input h-weight-bold"
          placeholder="medium username"
          id="medium"
          name="medium"
        /><br />
        <input
          type="text"
          class="input h-weight-bold"
          placeholder="dribbble username"
          id="dribbble"
          name="dribbble"
        /><br />
        <input
          type="text"
          class="input h-weight-bold"
          placeholder="linkedin username"
          id="linkedin"
          name="linkedin"
        />
      </div>
      <br /><br />

      <!-- Content to submit with the form -->
      <input type="hidden" name="pages" id="pages" />

      <button type="button" class="button" onclick="submitthisform()">
        Build
      </button>
    </form>
    <script
      type="text/javascript"
      src="https://cdn.jsdelivr.net/gh/zeva-ui/zeva/dist/js/index.min.js"
    ></script>
    <script type="text/javascript">
      document.querySelector("#socials").addEventListener("change", event => {
        if (event.target.checked) {
          document.querySelector("#input_for_socials").style.display = "block";
        } else {
          document.querySelector("#input_for_socials").style.display = "none";
        }
      });
    </script>

    <script type="text/javascript">

      function loadConfig() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {

            // Got the JSON
            console.log(this.responseText);

            // Decode JSON
            var opts = JSON.parse(this.responseText);
            
            // Keys and ids
            var pairs = {
              "username": "username",
              "background": "background",
              "theme": "theme",
              "fork": "fork",
              "socials": "socials",
              "twitter": "twitter",
              "linkedin": "linkedin",
              "medium": "medium",
              "dribbble": "dribbble"
            };

            // Go through and set the pairs
            for (var key in pairs) {
              var element = document.getElementById(key);
              var val = opts[0][pairs[key]];
              if ((element !== null) && (val !== undefined)) {
                element.value = val;
              }
            }
          }
        };
        xhttp.open("GET", "config.json", true);
        xhttp.send();
      }

      // Pages
      var pages = [];
      var uniqueID = 0;

      // New page
      function newPage() {
        if (document.querySelector("#input_for_page").style.display === "none") {
          document.querySelector("#input_for_page").style.display = "block";
        } else {
          document.querySelector("#input_for_page").style.display = "none";
        }    
      }

      // External link
      function externalLink() {
        if (document.querySelector("#external-url-check").checked) {
          document.querySelector("#external-url").style.display = "block";
        } else {
          document.querySelector("#external-url").style.display = "none";
        }
      }

      // Add the page
      function addPage() {
        
        // Check input
        var pageName = document.getElementById('page-name').value;
        if (!pageName) {
          return;
        }

        // Check if page link is external
        var pageIsExternal = document.getElementById('external-url-check').checked;

        // Add
        addPageWithName(pageName, false, false, pageIsExternal);
      }

      // Add page with name
      function addPageWithName(pageName, isPaperSection, isCodeSection, pageIsExternal) {

        // Check external URL
        var pageExternalURL = document.getElementById('external-url').value;
        if (pageIsExternal) {
          if (pageExternalURL === "") {
            return;
          }
        }

        // Create new paper div
        var pageDiv = document.createElement("div");
        pageDiv.setAttribute("class", "indentPage");
        var pageID = `page_${uniqueID}`;
        uniqueID += 1;
        pageDiv.setAttribute("id", pageID);

        // Create name
        var innerHTML = ``;
        if (pageIsExternal) {
          innerHTML += `<p style='display:inline'><a href='${pageExternalURL}'>${pageName}</a></p>`;
        } else {
          innerHTML += `<p style='display:inline'>${pageName}</p>`;
        }

        // Whether to create the plus/remove button
        var createPlusButton = !pageIsExternal && !isCodeSection;
        var createRemoveButton = !isPaperSection && !isCodeSection;

        // Create plus button
        if (createPlusButton) {
          var entryID = `${pageID}_new_entry`;

          // Create entry button
          innerHTML += `&nbsp;
          <button 
          style='display:inline'
          class="button h-weight-bold h-border-pill -size-small"
          type="button"
          onclick="newEntry('${entryID}')">
          <i class='fas fa-plus'></i>&nbsp; Entry
          </button>`;
        }

        // Create remove button
        if (createRemoveButton) {
          innerHTML += `&nbsp; <p 
            style='display:inline'
            class="remove"
            onclick="removePage(event, '${pageID}')"> 
            <i class="fas fa-times"></i> Remove page
            </p>`
        }

        // Set html
        pageDiv.innerHTML = innerHTML;

        // Create plus entry section
        if (createPlusButton) {
          var entryDiv = document.createElement("div");
          entryDiv.setAttribute("class", "indentPageEntry");
          entryDiv.setAttribute("style", "display: none");
          entryDiv.setAttribute("id", entryID);
          
          // Name
          var inputName = document.createElement("input");
          var inputNameID = `${pageID}_entry_name`;
          inputName.setAttribute("type","text");
          inputName.setAttribute("class","input h-weight-bold");
          inputName.setAttribute("placeholder","Paper description");
          inputName.setAttribute("id",inputNameID);
          inputName.setAttribute("name","Name");
          entryDiv.appendChild(inputName);

          // Line break
          var lineBreak = document.createElement("br");
          entryDiv.appendChild(lineBreak);

          // URL
          var inputLink = document.createElement("input");
          var inputLinkID = `${pageID}_entry_url`;
          inputLink.setAttribute("type","text");
          inputLink.setAttribute("class","input h-weight-bold");
          inputLink.setAttribute("placeholder","Link");
          inputLink.setAttribute("id",inputLinkID);
          inputLink.setAttribute("name","Link");
          entryDiv.appendChild(inputLink);

          // Line break
          var lineBreak = document.createElement("br");
          entryDiv.appendChild(lineBreak);

          // Save
          var saveButton = document.createElement("button");
          saveButton.setAttribute("class","button h-weight-bold h-border-pill -size-small");
          saveButton.setAttribute("type","button");
          saveButton.setAttribute("onclick",`addEntry('${pageID}')`);
          saveButton.innerHTML = '<i class="fas"></i>Add';
          entryDiv.appendChild(saveButton);

          // Cancel
          var cancelButton = document.createElement("button");
          cancelButton.setAttribute("class","button h-weight-bold h-border-pill -size-small");
          cancelButton.setAttribute("type","button");
          cancelButton.setAttribute("onclick",`cancelEntry('${pageID}')`);
          cancelButton.innerHTML = '<i class="fas"></i>Cancel';
          entryDiv.appendChild(cancelButton);

          // Add to page divider
          pageDiv.appendChild(entryDiv);
        }

        // Add entry list
        var entryList = document.createElement("div");
        entryList.setAttribute("style","display: none");
        entryList.setAttribute("id",`${pageID}_list`);
        entryList.setAttribute("class","indentPageEntry");
        pageDiv.appendChild(entryList);

        // Add horizontal line
        var hline = document.createElement("hr");
        pageDiv.appendChild(hline);

        // Add to the website list
        document.querySelector("#pageList").appendChild(pageDiv);

        // Show
        document.querySelector("#pageList").style.display = "block";

        // Add to list
        var page = {};
        page["name"] = pageName;
        page["ID"] = pageID;
        page["entries"] = [];
        page["is_external"] = pageIsExternal;
        page["external_url"] = pageExternalURL;
        pages.push(page);

        // Clear
        document.getElementById('page-name').value = "";
        document.getElementById('external-url-check').checked = false;
        document.getElementById('external-url').value = "";
        document.getElementById('external-url').style.display = "none";

        // Hide
        document.querySelector("#input_for_page").style.display = "none";
      }

      // Cancel page
      function removePage(e, pageID) {

        // Remove element
        var elem = document.getElementById(pageID);
        elem.parentNode.removeChild(elem);

        // Remove from list
        var i=0;
        while (i<pages.length) {
          if (pages[i]["ID"] === pageID) {
            pages.splice(i,1);
            break;
          }
          i += 1;
        }
      }

      function cancelAddPage() {
        document.querySelector("#input_for_page").style.display = "none";
      }

      // New entry
      function newEntry(entryID) {
        if (document.querySelector(`#${entryID}`).style.display === "none") {
          document.querySelector(`#${entryID}`).style.display = "block";
        } else {
          document.querySelector(`#${entryID}`).style.display = "none";
        }
      }

      // Add the entry
      function addEntry(pageID) {
        
        // Check input
        var entryName = document.getElementById(`${pageID}_entry_name`).value;
        var entryURL = document.getElementById(`${pageID}_entry_url`).value;
        if ((!entryName) || (!entryURL)) {
          return;
        }

        // Create new entry div
        var entryDiv = document.createElement("div");
        var entryID = `${pageID}_${uniqueID}`;
        uniqueID += 1;
        entryDiv.setAttribute("id", entryID);

        // Create new entry text
        var innerHTML = `<p style="display:inline">
          <a href="${entryURL}" title="${entryURL}">
            ${entryName}
            </a></p>
            &nbsp; <p 
            style='display:inline'
            class="remove"
            onclick="removeEntry(event, '${pageID}', '${entryID}')"> 
            <i class="fas fa-times"></i> Remove entry
            </p>
            `;

        // Set content
        entryDiv.innerHTML = innerHTML;

        // Add to the list and show it
        document.getElementById(`${pageID}_list`).appendChild(entryDiv);
        document.getElementById(`${pageID}_list`).style.display = "block";

        // Add to list
        var entry = {};
        entry["ID"] = entryID;
        entry["name"] = entryName;
        entry["url"] = entryURL;
        var i_page=0;
        while (i_page<pages.length) {
          if (pages[i_page]["ID"] === pageID) {
            pages[i_page]["entries"].push(entry);
            break;
          }
          i_page += 1;
        }

        // Clear
        document.getElementById(`${pageID}_entry_name`).value = "";
        document.getElementById(`${pageID}_entry_url`).value = "";

        // Hide new entry
        document.getElementById(`${pageID}_new_entry`).style.display = "none";
      }

      // Remove entry
      function removeEntry(e, pageID, entryID) {

        // Remove element
        var elem = document.getElementById(entryID);
        elem.parentNode.removeChild(elem);
        
        // Remove from list
        var i_page=0;
        var done = false;
        while ((i_page<pages.length) && (!done)) {
          if (pages[i_page]["ID"] === pageID) {
            var i_entry=0;
            while (i_entry<pages[i_page]["entries"].length) {
              if (pages[i_page]["entries"][i_entry]["ID"] === entryID) {
                pages[i_page]["entries"].splice(i_entry,1);
                done = true;
                break;
              }

              i_entry += 1;
            }
          }
          i_page += 1;
        }
      }

      // Cancel entry
      function cancelEntry(pageID) {
        document.getElementById(`${pageID}_new_entry`).style.display = "none";
      }

      // Submit this form
      function submitthisform() {
        // Check username
        if (document.getElementById("username").value === "") {
          return
        }

        document.querySelector("#pages").value = JSON.stringify(pages);
        document.querySelector("#form").submit();
      }
    </script>
  </body>
</html>
